<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.koreait.apiserver.dao.StudyRoomDao">

    <resultMap id="StudyRoomResultMap" type="com.koreait.apiserver.entity.StudyRoom">
        <id property="studyRoomId" column="study_room_id"/>
        <result property="roomId" column="room_id"/>
        <result property="bossId" column="boss_id"/>
        <result property="title" column="title"/>
        <result property="description" column="description"/>
        <result property="education" column="education"/>
        <result property="department" column="department"/>
        <result property="region" column="region"/>
        <result property="district" column="district"/>
        <result property="capacity" column="capacity"/>
        <result property="currentMembers" column="current_members"/>
        <result property="time" column="time"/>
        <result property="thumbnail" column="thumbnail"/>
        <result property="isPublic" column="is_public"/>
        <result property="createdAt" column="created_at"/>
        <result property="bossNickname" column="boss_nickname"/>
        <result property="bossProfileImage" column="boss_profile_image"/>
    </resultMap>

    <insert id="insertStudyRoom" parameterType="com.koreait.apiserver.entity.StudyRoom" useGeneratedKeys="true" keyProperty="studyRoomId">
        INSERT INTO studyroom (
            room_id,  title, description, capacity, current_members
        ) VALUES (
            #{roomId}, #{title}, #{description},
            , #{capacity}, #{currentMembers}, NOW()
        )
    </insert>

    <select id="findAll" resultMap="StudyRoomResultMap">
        SELECT sr.*, m.nickname as boss_nickname, m.profile_image as boss_profile_image
        FROM studyroom sr
        LEFT JOIN members m ON sr.boss_id = m.id
        ORDER BY sr.created_at DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>


    <select id="searchStudyRooms" resultMap="StudyRoomResultMap">
        SELECT sr.*, m.nickname AS boss_nickname, m.profile_image AS boss_profile_image
        FROM studyroom sr
        INNER JOIN members m ON sr.boss_id = m.id
        WHERE
        (<if test="title != null and title != ''">
        sr.title LIKE CONCAT('%', #{title}, '%')
    </if>)
        <if test="title != null and title != '' and nickname != null and nickname != ''">
            AND
        </if>
        (<if test="nickname != null and nickname != ''">
        m.nickname LIKE CONCAT('%', #{nickname}, '%')
    </if>)
        ORDER BY sr.created_at DESC
    </select>

    <!-- 회원이 참여한 스터디룸 조회 -->
    <select id="findByMemberId" resultMap="StudyRoomResultMap">
        SELECT DISTINCT sr.*, m.nickname as boss_nickname, m.profile_image as boss_profile_image
        FROM studyroom sr
        LEFT JOIN members m ON sr.boss_id = m.id
        LEFT JOIN study_room_members srm ON sr.study_room_id = srm.study_room_id
        WHERE sr.boss_id = #{memberId}
           OR (srm.member_id = #{memberId} AND srm.status = 'APPROVED')
        ORDER BY sr.created_at DESC
    </select>

</mapper>